docker-images:
  - name: node-image
    from: node:8.11.1
    expose:
      - 4000
    add:
      - foo-added-file-to-docker-image.txt
      - _node_modules
      - package.json
    install: test/commands/install.sh
  - name: mongodb-image
    from: mongo:3.6.4
    expose:
      - 27017
docker-containers:
  - name: test-container
    build: node-image
    bind:
      - lib
      - test
      - server.js
  - name: api-container
    build: node-image
    bind:
      - lib
      - test
      - server.js
  - name: mongodb-container
    build: mongodb-image
    bind:
      - test/commands
suites:
  unit: 
    - name: unit
      test:
        specs: test/unit
      coverage:
        config:
          dir: .coverage/unit
  integration:
    - name: logs
      services:
        - name: mongodb
          docker:
            container: mongodb-container
            command: test/commands/mongodb-docker.sh
        - name: api-server
          local:
            command: test/commands/start-server.sh
            env:
              mongodb: avoid
              api_host: localhost
              api_port: 3000
          docker:
            container: api-container
            command: test/commands/start-server.sh
            wait-on:
              resources:
                - tcp:mongodb-container:27017
              timeout: 50000
              interval: 50
              delay: 100
            env:
              mongodb: mongodb://mongodb-container/narval-api-test
              api_host: api-container
              api_port: 4000
      test:
        specs: test/integration/logs
        local:
          wait-on: 
            resources:
              - tcp:localhost:3000
            timeout: 35000
            interval: 60
            delay: 150
          env:
            api_host: localhost
            api_port: 3000
        docker:
          container: test-container
          wait-on: 
            resources:
              - tcp:api-container:4000
            timeout: 35000
            interval: 60
            delay: 150
          env:
            api_host: api-container
            api_port: 4000
      coverage:
        enabled: false
    - name: commands
      services:
        - name: mongodb
          docker:
            container: mongodb-container
            command: test/commands/mongodb-docker.sh
        - name: api-server
          local:
            command: test/commands/start-server.sh
            env:
              mongodb: avoid
              api_host: localhost
              api_port: 3000
          docker:
            container: api-container
            command: test/commands/start-server.sh
            wait-on:
              resources: tcp:mongodb-container:27017
            env:
              mongodb: mongodb://mongodb-container/narval-api-test
              api_host: api-container
              api_port: 4000
      test:
        specs: test/integration/commands
        local:
          wait-on: tcp:localhost:3000
          env:
            api_host: localhost
            api_port: 3000
        docker:
          container: test-container
          wait-on: tcp:api-container:4000
          env:
            api_host: api-container
            api_port: 4000
      coverage:
        enabled: false
