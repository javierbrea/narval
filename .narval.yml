suites:
  unit: 
    - name: unit
      test:
        specs: test/unit
      coverage:
        config:
          dir: .coverage/unit
  integration:
    - name: no-config
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: sum
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: sum
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/tests/test-launch.specs.js
          - test/integration/specs/tests/report.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/exit/exit-ok.specs.js
        local:
          wait-on: .narval/logs/integration/no-config/package-test/exit-code.log
          env:
            package_to_launch: sum
            coverage_dir: .coverage
      coverage:
        enabled: false
    - name: standard-ko
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: standard-ko
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: standard-ko
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ko.specs.js
          - test/integration/specs/tests/unit-not-launched.specs.js
          - test/integration/specs/exit/exit-ko.specs.js
        local:
          wait-on: .narval/logs/integration/standard-ko/package-test/exit-code.log
          env:
            package_to_launch: standard-ko
      coverage:
        enabled: false
    - name: standard-dirs
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: standard-ko
            narval_config: standard-dirs
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: standard-ko
              narval_options: -- --standard
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/exit/exit-ok.specs.js
        local:
          wait-on: .narval/logs/integration/standard-dirs/package-test/exit-code.log
          env:
            package_to_launch: standard-ko
      coverage:
        enabled: false
    - name: standard-fix
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: standard-ko
            narval_config: standard-dirs
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: standard-ko
              narval_options: -- --fix
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/tests/unit-not-launched.specs.js
          - test/integration/specs/exit/exit-ok.specs.js
        local:
          wait-on: .narval/logs/integration/standard-fix/package-test/exit-code.log
          env:
            package_to_launch: standard-ko
      coverage:
        enabled: false
    - name: standard-dirs-array
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: standard-ko
            narval_config: standard-dirs-array
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: standard-ko
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/exit/exit-ko.specs.js # Should end ko because have no tests
        local:
          wait-on: .narval/logs/integration/standard-dirs-array/package-test/exit-code.log
          env:
            package_to_launch: standard-ko
      coverage:
        enabled: false
    - name: test-ko
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: sum
            narval_config: test-ko
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: sum
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/tests/test-launch.specs.js
          - test/integration/specs/tests/test-ko.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/exit/exit-ko.specs.js
        local:
          wait-on: .narval/logs/integration/test-ko/package-test/exit-code.log
          env:
            package_to_launch: sum
            coverage_dir: .coverage
      coverage:
        enabled: false
    - name: tests-config
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: sum
            narval_config: tests-config
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: sum
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/tests/test-launch.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/details.specs.js
          - test/integration/specs/tests-config
          - test/integration/specs/exit/exit-ok.specs.js
        local:
          wait-on: .narval/logs/integration/tests-config/package-test/exit-code.log
          env:
            package_to_launch: sum
            coverage_dir: .coverage/custom
      coverage:
        enabled: false
    - name: coverage-disabled
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: sum
            narval_config: coverage-disabled
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: sum
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/tests/test-launch.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/coverage/disabled.specs.js
          - test/integration/specs/coverage-disabled
          - test/integration/specs/exit/exit-ok.specs.js
        local:
          wait-on: .narval/logs/integration/coverage-disabled/package-test/exit-code.log
          env:
            package_to_launch: sum
            coverage_dir: .coverage/unit
      coverage:
        enabled: false
    - name: api-docker
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --build
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/tests/test-launch.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/docker/run.specs.js
          - test/integration/specs/docker/build.specs.js
          - test/integration/specs/docker/down-volumes.specs.js
          - test/integration/specs/docker/shared.specs.js
          - test/integration/specs/api-docker
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/environment/defaults.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-docker/package-test/exit-code.log
            timeout: 1200000
          env:
            package_to_launch: api
            coverage_dir: .coverage/unit
      coverage:
        enabled: false
    - name: api-local
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-no-mongo
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/tests/test-launch.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/docker/not-run.specs.js
          - test/integration/specs/docker/not-build.specs.js
          - test/integration/specs/api-local
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/environment/defaults.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local/package-test/exit-code.log
            timeout: 600000
          env:
            package_to_launch: api
            coverage_dir: .coverage/unit
      coverage:
        enabled: false
    - name: api-local-custom-shell
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-no-mongo
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --suite=books-api --local --shell=/foo/path/to/shell
      test:
        specs:
          - test/integration/specs/standard/standard-not-run.specs.js
          - test/integration/specs/docker/not-run.specs.js
          - test/integration/specs/api-local-shell/ko.specs.js
          - test/integration/specs/exit/exit-ko.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local-custom-shell/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
      coverage:
        enabled: false
    - name: api-docker-no-build
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
      test:
        specs:
          - test/integration/specs/standard/standard-run.specs.js
          - test/integration/specs/standard/standard-ok.specs.js
          - test/integration/specs/tests/test-launch.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/docker/run.specs.js
          - test/integration/specs/docker/not-build.specs.js
          - test/integration/specs/docker/down-volumes.specs.js
          - test/integration/specs/docker/shared.specs.js
          - test/integration/specs/api-docker
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/environment/defaults.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-docker-no-build/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/unit
      coverage:
        enabled: false
    - name: api-docker-no-down-volumes
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-no-down-volumes
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --suite=books-api
      test:
        specs:
          - test/integration/specs/standard/standard-not-run.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/tests/unit-not-launched.specs.js
          - test/integration/specs/docker/run.specs.js
          - test/integration/specs/docker/not-build.specs.js
          - test/integration/specs/docker/not-down-volumes.specs.js
          - test/integration/specs/docker/shared.specs.js
          - test/integration/specs/api-docker
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/environment/defaults.specs.js
          - test/integration/specs/environment/custom-no-down-volumes.specs.js
          - test/integration/specs/logs/service.logs.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-docker-no-down-volumes/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-docker-custom-args
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-docker-custom-args
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --suite=books-api
      test:
        specs:
          - test/integration/specs/standard/standard-not-run.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/tests/unit-not-launched.specs.js
          - test/integration/specs/docker/run.specs.js
          - test/integration/specs/docker/not-build.specs.js
          - test/integration/specs/docker/not-down-volumes.specs.js
          - test/integration/specs/docker/shared.specs.js
          - test/integration/specs/api-docker
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/environment/defaults.specs.js
          - test/integration/specs/arguments/custom-docker.specs.js
          - test/integration/specs/logs/service.logs.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-docker-custom-args/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-local-custom-args
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-local-custom-args
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --suite=books-api
      test:
        specs:
          - test/integration/specs/standard/standard-not-run.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/tests/unit-not-launched.specs.js
          - test/integration/specs/docker/not-run.specs.js
          - test/integration/specs/api-integration-local
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/environment/defaults.specs.js
          - test/integration/specs/arguments/custom-local.specs.js
          - test/integration/specs/logs/service.local.logs.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local-custom-args/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-local-custom-vars
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-local-custom-vars
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --suite=books-api
      test:
        specs:
          - test/integration/specs/standard/standard-not-run.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/tests/unit-not-launched.specs.js
          - test/integration/specs/docker/not-run.specs.js
          - test/integration/specs/api-integration-local
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/environment/defaults.specs.js
          - test/integration/specs/environment/custom-api-local.specs.js
          - test/integration/specs/logs/service.local.logs.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local-custom-vars/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-integration
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-integration
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --type=integration
      test:
        specs:
          - test/integration/specs/standard/standard-not-run.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/tests/unit-not-launched.specs.js
          - test/integration/specs/docker/run.specs.js
          - test/integration/specs/docker/not-build.specs.js
          - test/integration/specs/docker/not-down-volumes.specs.js
          - test/integration/specs/docker/shared.specs.js
          - test/integration/specs/api-integration
          - test/integration/specs/exit/exit-ok.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-integration/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
      coverage:
        enabled: false
    - name: api-integration-local
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-integration-no-mongo
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --type=integration --local
      test:
        specs:
          - test/integration/specs/standard/standard-not-run.specs.js
          - test/integration/specs/tests/test-ok.specs.js
          - test/integration/specs/tests/unit-not-launched.specs.js
          - test/integration/specs/docker/not-run.specs.js
          - test/integration/specs/docker/not-build.specs.js
          - test/integration/specs/api-integration-local
          - test/integration/specs/exit/exit-ok.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-integration-local/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
      coverage:
        enabled: false
    - name: api-integration-abort-on-error
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-integration-abort-on-error
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
      test:
        specs:
          - test/integration/specs/docker/not-build.specs.js
          - test/integration/specs/docker/not-down-volumes.specs.js
          - test/integration/specs/docker/shared.specs.js
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/api-abort-on-error
          - test/integration/specs/logs/service.logs.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-integration-abort-on-error/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            logs_folder: integration/logs
      coverage:
        enabled: false
    - name: api-integration-abort-on-error-local
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-integration-abort-on-error
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local
      test:
        specs:
          - test/integration/specs/docker/not-run.specs.js
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/api-abort-on-error-local/time-out.specs.js
          - test/integration/specs/logs/service.local.logs.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-integration-abort-on-error-local/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            logs_folder: integration/logs
      coverage:
        enabled: false
    - name: api-integration-abort-on-error-local-test-ok
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-integration-abort-on-error-local-test-ok
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local
      test:
        specs:
          - test/integration/specs/docker/not-run.specs.js
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/api-abort-on-error-local/test-ok.specs.js
          - test/integration/specs/logs/service.local.logs.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-integration-abort-on-error-local-test-ok/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            logs_folder: integration/logs
      coverage:
        enabled: false
    - name: api-docker-coverage
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
      test:
        specs:
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/logs/service.logs.specs.js
          - test/integration/specs/api-coverage/docker.common.specs.js
          - test/integration/specs/api-coverage/docker.test-ok.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-docker-coverage/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/end-to-end/books-api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-local-coverage
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local
      test:
        specs:
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/logs/service.local.coverage.logs.specs.js
          - test/integration/specs/api-coverage/local.common.specs.js
          - test/integration/specs/api-coverage/local.test-ok.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local-coverage/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/end-to-end/books-api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-docker-coverage-test-ko
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage-test-ko
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
      test:
        specs:
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/logs/service.logs.specs.js
          - test/integration/specs/coverage/not-json.specs.js
          - test/integration/specs/api-coverage/docker.common.specs.js
          - test/integration/specs/api-coverage/docker.test-ko.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-docker-coverage-test-ko/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/end-to-end/books-api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-local-coverage-test-ko
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage-test-ko
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local
      test:
        specs:
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/logs/service.local.coverage.logs.specs.js
          - test/integration/specs/coverage/not-json.specs.js
          - test/integration/specs/api-coverage/local.common.specs.js
          - test/integration/specs/api-coverage/local.test-ko.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local-coverage-test-ko/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/end-to-end/books-api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-docker-coverage-service-ko
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage-service-ko
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
      test:
        specs:
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/logs/service.logs.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/api-coverage/docker.service-ko.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-docker-coverage-service-ko/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/end-to-end/books-api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-local-coverage-service-ko
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage-service-ko
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local
      test:
        specs:
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/logs/service.local.coverage.logs.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/api-coverage/local.common.specs.js
          - test/integration/specs/api-coverage/local.service-ko.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local-coverage-service-ko/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/end-to-end/books-api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-local-coverage-service-ko-abort
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage-service-ko-abort
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local
      test:
        specs:
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/logs/service.local.coverage.logs.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/api-coverage/local.service-ko-abort.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local-coverage-service-ko-abort/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/end-to-end/books-api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-local-coverage-only-api
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage
      services:
        - name: package-api
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local=api-server
      test:
        specs:
          - test/integration/packages/api/test/end-to-end/books
        local:
          wait-on:
            resources: 
              - tcp:localhost:3000
            timeout: 120000
          env:
            api_host: localhost
            api_port: 3000
      coverage:
        enabled: false
    - name: api-local-coverage-only-test
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage-test-not-wait
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local=test
      test:
        specs:
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/api-coverage/local.only-test.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local-coverage-only-test/package-test/exit-code.log
            timeout: 120000
      coverage:
        enabled: false
    - name: api-local-coverage-api-and-test
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-coverage
      services:
        - name: package-api
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local=api-server
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
              narval_options: -- --local=test
      test:
        specs:
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/api-coverage/local.api-and-test.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-local-coverage-api-and-test/package-test/exit-code.log
            timeout: 120000
      coverage:
        enabled: false
    - name: api-docker-coverage-mongodb-ko
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-docker-coverage-mongodb-ko
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
      test:
        specs:
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/logs/service.logs.specs.js
          - test/integration/specs/coverage/json.specs.js
          - test/integration/specs/coverage/lcov.specs.js
          - test/integration/specs/coverage/summary.specs.js
          - test/integration/specs/api-coverage/docker.mongodb-ko.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-docker-coverage-mongodb-ko/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/end-to-end/books-api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: api-docker-coverage-mongodb-ko-abort
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: api
            narval_config: api-docker-coverage-mongodb-ko-abort
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: api
      test:
        specs:
          - test/integration/specs/exit/exit-ko.specs.js
          - test/integration/specs/logs/service.logs.specs.js
          - test/integration/specs/coverage/not-json.specs.js
          - test/integration/specs/api-coverage/docker.mongodb-ko-abort.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/api-docker-coverage-mongodb-ko-abort/package-test/exit-code.log
            timeout: 120000
          env:
            package_to_launch: api
            coverage_dir: .coverage/end-to-end/books-api
            logs_folder: end-to-end/books-api
      coverage:
        enabled: false
    - name: local-services-waiting-close
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: simple-command
            narval_config: local-services-waiting-close
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: simple-command
      test:
        specs:
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/logs/local-services-waiting-close.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/local-services-waiting-close/package-test/exit-code.log
            timeout: 120000
      coverage:
        enabled: false
    - name: local-services-waiting-custom-close
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: simple-command
            narval_config: local-services-waiting-custom-close
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: simple-command
      test:
        specs:
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/logs/local-services-waiting-close.specs.js
        local:
          wait-on: exit:package-test
      coverage:
        enabled: false
    - name: clean-logs-folder-local
      before:
        local:
          command: test/integration/commands/prepare-package.sh
          env:
            package_to_launch: simple-command
            narval_config: clean-logs-folder-local
      services:
        - name: package-test
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: simple-command
        - name: package-test-2
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: simple-command
              narval_options: -- --suite=suite-2
            wait-on: .narval/logs/integration/clean-logs-folder-local/package-test/exit-code.log
        - name: package-test-3
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: simple-command
              narval_options: -- --suite=suite-2 --local=service-2
            wait-on: .narval/logs/integration/clean-logs-folder-local/package-test-2/exit-code.log
        - name: package-test-4
          local:
            command: test/integration/commands/launch-test.sh
            env:
              package_to_launch: simple-command
              narval_options: -- --suite=suite-2 --local=test
            wait-on: .narval/logs/integration/clean-logs-folder-local/package-test-3/exit-code.log
      test:
        specs:
          - test/integration/specs/exit/exit-ok.specs.js
          - test/integration/specs/logs/clean-logs-folder-local.specs.js
        local:
          wait-on:
            resources: 
              - .narval/logs/integration/clean-logs-folder-local/package-test-4/exit-code.log
            timeout: 120000
      coverage:
        enabled: false
